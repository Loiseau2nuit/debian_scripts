#!/bin/bash

set -euo pipefail

# === CONFIGURATION ===
SYMLINK="/opt/node"
OLD_DIR="/opt/node-OLD"
LOG_FILE="/var/log/node_update_check.log"
TMP_DIR="/tmp/nodejs-update"
NODEJS_DIST_URL="https://nodejs.org/dist/latest"
ARCH="linux-x64"
MAIL_TO="admin@example.com"
GLOBAL_NODE_LINK="/usr/local/bin/node"

# === Fonctions utilitaires ===
log() {
    echo "[$(date '+%F %T')] $1" | tee -a "$LOG_FILE"
}

send_mail() {
    SUBJECT="$1"
    BODY="$2"
    echo "$BODY" | mail -s "$SUBJECT" "$MAIL_TO"
}

handle_error() {
    log "‚ùå Une erreur s'est produite. Tentative de rollback."
    rollback || log "‚ùå Rollback √©chou√©."
    TAIL_LOG=$(tail -n 50 "$LOG_FILE")
    send_mail "‚ö†Ô∏è √âchec mise √† jour Node.js + tentative rollback" "$TAIL_LOG"
    exit 1
}

rollback() {
    if [ -d "$OLD_DIR" ]; then
        log "üîÅ Restauration de la version pr√©c√©dente depuis $OLD_DIR"
        rm -rf "$(readlink -f "$SYMLINK")"
        mv "$OLD_DIR" "$(readlink -f "$SYMLINK")"
        log "‚úÖ Rollback effectu√©."
        return 0
    else
        log "‚ö†Ô∏è Aucun r√©pertoire $OLD_DIR trouv√© pour rollback."
        return 1
    fi
}

install_script() {
    log "üîß Installation initiale..."

    # Cr√©ation du log
    touch "$LOG_FILE"
    chmod 664 "$LOG_FILE"
    log "Fichier de log cr√©√© √† $LOG_FILE"

    # V√©rification pr√©sence de Node.js
    if [ ! -L "$SYMLINK" ]; then
        read -rp "Node.js ne semble pas install√©. Souhaitez-vous l'installer maintenant ? [y/N] " reply
        if [[ "$reply" =~ ^[Yy]$ ]]; then
            bash "$0"
            exit 0
        else
            log "‚èπÔ∏è Installation annul√©e par l'utilisateur."
            exit 1
        fi
    fi

    # Lien global vers node
    if [ ! -L "$GLOBAL_NODE_LINK" ]; then
        ln -s "$SYMLINK/bin/node" "$GLOBAL_NODE_LINK"
        log "Lien global $GLOBAL_NODE_LINK ‚Üí $SYMLINK/bin/node cr√©√©"
    fi

    log "‚úÖ Installation initiale termin√©e."
    exit 0
}

# === Installation si demand√© ===
if [[ "${1:-}" == "--install" ]]; then
    install_script
fi

# === Rollback si demand√© ===
if [[ "${1:-}" == "--rollback" ]]; then
    rollback && exit 0 || exit 1
fi

# === Pi√®ge les erreurs ===
trap 'handle_error' ERR

log "=== D√©marrage de la v√©rification de mise √† jour Node.js ==="

# === √âtape 0 : V√©rifie que Node.js est install√© ===
if [ ! -L "$SYMLINK" ]; then
    log "‚ùå Node.js ne semble pas install√© (lien $SYMLINK manquant)."
    read -rp "Souhaitez-vous proc√©der √† son installation ? [y/N] " reply
    if [[ "$reply" =~ ^[Yy]$ ]]; then
        bash "$0" --install
        exit 0
    else
        log "‚èπÔ∏è V√©rification annul√©e."
        exit 1
    fi
fi

# === √âtape 1 : V√©rifie le lien symbolique
REAL_PATH=$(readlink -f "$SYMLINK")
LOCAL_VERSION=$(basename "$REAL_PATH" | sed -E 's/^node-v//')

# === √âtape 2 : R√©cup√©ration de la version distante
LATEST_VERSION=$(curl -s "$NODEJS_DIST_URL/" | grep -oP 'node-v\K[0-9]+\.[0-9]+\.[0-9]+' | head -n1)

if [ -z "$LATEST_VERSION" ]; then
    log "‚ùå Impossible de r√©cup√©rer la version distante."
    exit 1
fi

if [ "$LOCAL_VERSION" = "$LATEST_VERSION" ]; then
    log "‚úÖ Node.js est √† jour (v$LOCAL_VERSION)."
    exit 0
fi

log "üü° Mise √† jour n√©cessaire : install√©e = $LOCAL_VERSION / disponible = $LATEST_VERSION"

# === √âtape 3 : T√©l√©chargement
FILENAME="node-v$LATEST_VERSION-$ARCH"
ARCHIVE_NAME="$FILENAME.tar.xz"
DOWNLOAD_URL="$NODEJS_DIST_URL/$ARCHIVE_NAME"

rm -rf "$TMP_DIR"
mkdir -p "$TMP_DIR"
log "‚¨áÔ∏è T√©l√©chargement de $ARCHIVE_NAME depuis $DOWNLOAD_URL"
curl -sL "$DOWNLOAD_URL" -o "$TMP_DIR/$ARCHIVE_NAME"

# === √âtape 4 : V√©rification SHA256
SHA_URL="$NODEJS_DIST_URL/SHASUMS256.txt"
EXPECTED_SHA=$(curl -s "$SHA_URL" | grep "$ARCHIVE_NAME" | awk '{print $1}')
DOWNLOADED_SHA=$(sha256sum "$TMP_DIR/$ARCHIVE_NAME" | awk '{print $1}')

if [ "$EXPECTED_SHA" != "$DOWNLOADED_SHA" ]; then
    log "‚ùå √âchec de v√©rification SHA256."
    exit 1
fi
log "üîê V√©rification SHA256 r√©ussie"

# === √âtape 5 : Extraction
tar -xf "$TMP_DIR/$ARCHIVE_NAME" -C "$TMP_DIR"
INSTALL_DIR="/opt/node-v$LATEST_VERSION"
mv "$TMP_DIR/$FILENAME" "$INSTALL_DIR"
log "üì¶ Extraction d√©ploy√©e dans $INSTALL_DIR"

# === √âtape 6 : Sauvegarde + bascule
rm -rf "$OLD_DIR"
log "üíæ Sauvegarde de la version actuelle vers $OLD_DIR"
mv "$REAL_PATH" "$OLD_DIR"

ln -sfn "$INSTALL_DIR" "$SYMLINK"
log "üîó Lien symbolique mis √† jour : $SYMLINK ‚Üí $INSTALL_DIR"

# === √âtape 7 : Lien global vers node
ln -sf "$SYMLINK/bin/node" "$GLOBAL_NODE_LINK"
log "üåê Lien global mis √† jour : $GLOBAL_NODE_LINK"

# === √âtape 8 : Nettoyage
rm -rf "$TMP_DIR"
log "üßπ Nettoyage termin√©"

# === √âtape 9 : Notification succ√®s
BODY="Node.js mis √† jour avec succ√®s :

- Ancienne version : $LOCAL_VERSION
- Nouvelle version : $LATEST_VERSION
- Install√©e dans : $INSTALL_DIR
- Sauvegarde pr√©c√©dente : $OLD_DIR
- Date : $(date)
- Lien symbolique : $SYMLINK ‚Üí $INSTALL_DIR"

send_mail "‚úÖ Node.js mis √† jour vers $LATEST_VERSION" "$BODY"
log "üìß Notification de succ√®s envoy√©e √† $MAIL_TO"
